{"ast":null,"code":"import _regeneratorRuntime from \"/usr/src/app/workplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/usr/src/app/workplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/usr/src/app/workplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/usr/src/app/workplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/usr/src/app/workplace/src/Event.js\";\nimport React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { firebaseApp } from './config/firebase';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { TextField } from '@material-ui/core';\nimport { AttendanceTable, DateButtonGroup } from \"./parts\";\nimport { attendeesObjectToArray } from \"./DataConvert\";\nimport './Event.css';\nconst firebaseDb = firebaseApp.database();\n\nconst Event = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        comment = _useState4[0],\n        setComment = _useState4[1]; // 2-1.ダミーデータを確認しよう\n  // コメントアウトを外してください\n  // const [event, setEvent] = useState({\n  //     name: \"\",\n  //     description: \"\",\n  //     dates: [],\n  //     attendees: []\n  //   });\n  // const [possibleDates, setPossibleDates] = useState([]);\n  // 2-1.ダミーデータを確認しよう\n  // コメントアウトしてください\n\n\n  const _useState5 = useState({\n    name: \"オンライン交流会\",\n    description: \"楽しみましょう\",\n    dates: [\"8/7(月) 20:00～\", \"8/8(火) 20:00～\", \"8/9(水) 21:00～\"],\n    attendees: [{\n      name: \"一郎\",\n      votes: [\"○\", \"△\", \"×\"],\n      comment: '9日はいけません'\n    }, {\n      name: \"次郎\",\n      votes: [\"○\", \"○\", \"×\"],\n      comment: ''\n    }]\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        event = _useState6[0],\n        setEvent = _useState6[1];\n\n  const _useState7 = useState([{\n    date: \"8/7(月) 20:00～\",\n    vote: '△'\n  }, {\n    date: \"8/8(火) 20:00～\",\n    vote: '△'\n  }, {\n    date: \"8/9(水) 21:00～\",\n    vote: '△'\n  }]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        possibleDates = _useState8[0],\n        setPossibleDates = _useState8[1];\n\n  useEffect(() => {\n    // 2-2-1.イベントIDを取得しよう\n    const eventId = props.match.params.id; // 2-2-2.Realtime Databaseから取得するデータを特定しよう\n    // 2-2-3.Realtime Databaseからデータを取得しよう\n    // 2-4.2-4.イベント名、説明文、候補日程を表示させよう\n    // 2-5.候補日程を表示用に編集しよう\n  }, [setEvent, setPossibleDates, props.match.params.id]); // 出欠回答欄で選択された◯△×の情報はこの関数でstateに保存しています。\n\n  const _onSelectVote = (targetDate, selectedVote) => {\n    const newPossibleDates = possibleDates.map(possibleDate => {\n      return possibleDate.date === targetDate ? _objectSpread(_objectSpread({}, possibleDate), {}, {\n        vote: selectedVote\n      }) : possibleDate;\n    });\n    setPossibleDates(newPossibleDates);\n  }; // 名前入力欄、コメント入力欄、出欠選択欄のstateを初期状態に更新する関数\n\n\n  const initializeAttendances = () => {\n    setName('');\n    setComment('');\n    setPossibleDates(event.dates.map(date => {\n      return {\n        date: date,\n        vote: '△'\n      };\n    }));\n  }; // \"出欠を回答する\"ボタンを押すとこの関数が呼び出されます。\n\n\n  const registerAttendances = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function registerAttendances() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    id: \"event\",\n    container: true,\n    item: true,\n    justify: \"space-between\",\n    alignItems: \"flex-start\",\n    xs: 9,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    direction: \"column\",\n    justify: \"flex-start\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: \"guide-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, event.name), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: \"guide-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, event.description)), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 11,\n    direction: \"column\",\n    justify: \"flex-start\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AttendanceTable, {\n    columns: event.dates,\n    attendees: event.attendees,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 11,\n    justify: \"space-between\",\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 5,\n    justify: \"flex-start\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: \"guide-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, \"\\u51FA\\u6B20\\u3092\\u5165\\u529B\\u3057\\u307E\\u3057\\u3087\\u3046\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    placeholder: \"\\u540D\\u524D\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    fullWidth: true,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    margin: \"normal\",\n    placeholder: \"\\u30B3\\u30E1\\u30F3\\u30C8\",\n    multiline: true,\n    rows: 7,\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    fullWidth: true,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 7,\n    spacing: 3,\n    justify: \"center\",\n    alignItems: \"flex-start\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, possibleDates.map(possibleDate => {\n    return /*#__PURE__*/React.createElement(DateButtonGroup, {\n      key: possibleDate.date,\n      date: possibleDate.date,\n      vote: possibleDate.vote,\n      onSelectVote: vote => _onSelectVote(possibleDate.date, vote),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 33\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    justify: \"flex-end\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => registerAttendances(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, \"\\u51FA\\u6B20\\u3092\\u56DE\\u7B54\\u3059\\u308B\")));\n};\n\nexport default withRouter(Event);","map":{"version":3,"sources":["/usr/src/app/workplace/src/Event.js"],"names":["React","useEffect","useState","withRouter","firebaseApp","Grid","Button","TextField","AttendanceTable","DateButtonGroup","attendeesObjectToArray","firebaseDb","database","Event","props","name","setName","comment","setComment","description","dates","attendees","votes","event","setEvent","date","vote","possibleDates","setPossibleDates","eventId","match","params","id","onSelectVote","targetDate","selectedVote","newPossibleDates","map","possibleDate","initializeAttendances","registerAttendances","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { firebaseApp } from './config/firebase'\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { TextField } from '@material-ui/core';\nimport {AttendanceTable, DateButtonGroup} from \"./parts\"\nimport { attendeesObjectToArray } from \"./DataConvert\";\n\nimport './Event.css';\n\nconst firebaseDb = firebaseApp.database();\n\nconst Event = (props) => {\n    const [name, setName] = useState('');\n    const [comment, setComment] = useState('');\n    // 2-1.ダミーデータを確認しよう\n    // コメントアウトを外してください\n    // const [event, setEvent] = useState({\n    //     name: \"\",\n    //     description: \"\",\n    //     dates: [],\n    //     attendees: []\n    //   });\n    // const [possibleDates, setPossibleDates] = useState([]);\n\n    // 2-1.ダミーデータを確認しよう\n    // コメントアウトしてください\n    const [event, setEvent] = useState({\n        name: \"オンライン交流会\",\n        description: \"楽しみましょう\",\n        dates: [ \"8/7(月) 20:00～\", \"8/8(火) 20:00～\", \"8/9(水) 21:00～\" ],\n        attendees: [\n          {\n            name: \"一郎\",\n            votes: [ \"○\", \"△\", \"×\" ],\n            comment: '9日はいけません'\n          },{\n            name: \"次郎\",\n            votes: [\"○\", \"○\", \"×\"],\n            comment: ''\n          }\n        ]\n      });\n    const [possibleDates, setPossibleDates] = useState([\n        {\n            date: \"8/7(月) 20:00～\",\n            vote: '△'\n        },\n        {\n            date: \"8/8(火) 20:00～\",\n            vote: '△'\n        },\n        {\n            date: \"8/9(水) 21:00～\",\n            vote: '△'\n        },\n    ]);\n\n\n    useEffect(() => {\n        // 2-2-1.イベントIDを取得しよう\n        const eventId = props.match.params.id;\n\n        // 2-2-2.Realtime Databaseから取得するデータを特定しよう\n\n        // 2-2-3.Realtime Databaseからデータを取得しよう\n\n        // 2-4.2-4.イベント名、説明文、候補日程を表示させよう\n        // 2-5.候補日程を表示用に編集しよう\n\n    },[setEvent, setPossibleDates, props.match.params.id]);\n\n    // 出欠回答欄で選択された◯△×の情報はこの関数でstateに保存しています。\n    const onSelectVote = (targetDate, selectedVote) => {\n        const newPossibleDates  = possibleDates.map(possibleDate => {\n                return (possibleDate.date === targetDate) ?\n                    { ...possibleDate, vote:selectedVote } :\n                    possibleDate;\n            });\n        setPossibleDates(newPossibleDates);\n    };\n\n    // 名前入力欄、コメント入力欄、出欠選択欄のstateを初期状態に更新する関数\n    const initializeAttendances = () => {\n        setName('');\n        setComment('');\n        setPossibleDates(event.dates.map(date => {\n            return {\n                date: date,\n                vote: '△'\n            }\n        }));\n    };\n\n\n    // \"出欠を回答する\"ボタンを押すとこの関数が呼び出されます。\n    const registerAttendances = async() => {\n        // 2-6.出欠情報登録機能を追加しよう\n        // 出欠情報をRealTimeDatabaseに登録しましょう\n    };\n\n    return (\n        <Grid\n            id=\"event\"\n            container\n            item\n            justify=\"space-between\"\n            alignItems=\"flex-start\"\n            xs={9}\n            spacing={4}\n            >\n                <Grid container item xs={12} direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\">\n                    <Grid item className=\"guide-title\">\n                        {event.name}\n                    </Grid>\n                    <Grid item className=\"guide-message\">\n                        {event.description}\n                    </Grid>\n                </Grid>\n                <Grid container item xs={11} direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\">\n                    <AttendanceTable columns={event.dates} attendees={event.attendees} />\n                </Grid>\n                <Grid container item xs={11} justify=\"space-between\" spacing={4}>\n                    <Grid container item xs={5} justify=\"flex-start\" direction=\"column\">\n                        <Grid item className=\"guide-title\">\n                            出欠を入力しましょう\n                        </Grid>\n                        <Grid item>\n                            <TextField\n                            placeholder=\"名前\"\n                            value={name}\n                            onChange={e => setName(e.target.value)}\n                            fullWidth={true}\n                            variant=\"outlined\"\n                            />\n                            <TextField\n                            margin=\"normal\"\n                            placeholder=\"コメント\"\n                            multiline\n                            rows={7}\n                            value={comment}\n                            onChange={e => setComment(e.target.value)}\n                            fullWidth={true}\n                            variant=\"outlined\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid container item xs={7} spacing={3} justify=\"center\" alignItems=\"flex-start\" direction=\"column\">\n                        {possibleDates.map((possibleDate) => {\n                            return (\n                                <DateButtonGroup\n                                    key={possibleDate.date}\n                                    date={possibleDate.date}\n                                    vote={possibleDate.vote}\n                                    onSelectVote={(vote) => onSelectVote(possibleDate.date, vote)}\n                                />\n                            )\n                        })}\n                    </Grid>\n                </Grid>\n                <Grid container item xs={12} justify=\"flex-end\" alignItems=\"flex-start\">\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => registerAttendances()}>\n                        出欠を回答する\n                    </Button>\n                </Grid>\n        </Grid>\n    );\n}\n\nexport default withRouter(Event);\n"]},"metadata":{},"sourceType":"module"}