{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/workplace/src/parts/AttendanceTable.js\";\nimport \"./AttendanceTable.css\";\nimport React from \"react\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst AttendanceTable = props => {\n  if (!props.columns) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n\n  const attendanceCounts = props.columns.map((column, i) => {\n    return {\n      date: column,\n      positiveCounts: props.attendees.filter(attendee => attendee.votes[i] === '○').length,\n      evenCounts: props.attendees.filter(attendee => attendee.votes[i] === '△').length,\n      negativeCounts: props.attendees.filter(attendee => attendee.votes[i] === '×').length\n    };\n  });\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    className: \"table\",\n    id: \"attendance-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    size: \"small\",\n    \"aria-label\": \"a dense table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, \"\\u65E5\\u7A0B\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    size: \"small\",\n    padding: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, \"\\u25CB\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    size: \"small\",\n    padding: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, \"\\u25B3\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    size: \"small\",\n    padding: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, \"\\xD7\"), props.attendees.map((atendee, i) => /*#__PURE__*/React.createElement(TableCell, {\n    key: i,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, atendee.name)))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, attendanceCounts.map((count, i) => /*#__PURE__*/React.createElement(TableRow, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, props.columns[i]), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    size: \"small\",\n    padding: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, count.positiveCounts), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    size: \"small\",\n    padding: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, count.evenCounts), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    size: \"small\",\n    padding: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, count.negativeCounts), props.attendees.map((atendee, index) => /*#__PURE__*/React.createElement(TableCell, {\n    key: index,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, atendee.votes[i])))), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"\\u30B3\\u30E1\\u30F3\\u30C8\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), props.attendees.map((atendee, i) => /*#__PURE__*/React.createElement(TableCell, {\n    key: i,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, atendee.comment))))));\n};\n\nexport default AttendanceTable;","map":{"version":3,"sources":["/usr/src/app/workplace/src/parts/AttendanceTable.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","AttendanceTable","props","columns","attendanceCounts","map","column","i","date","positiveCounts","attendees","filter","attendee","votes","length","evenCounts","negativeCounts","atendee","name","count","index","comment"],"mappings":"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","sourcesContent":["import \"./AttendanceTable.css\";\nimport React from \"react\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nconst AttendanceTable = (props) => {\n\n  if (!props.columns ) {\n    return (<></>)\n  }\n  const attendanceCounts = props.columns.map((column, i) => {\n    return {\n    date: column,\n    positiveCounts: props.attendees.filter(attendee => attendee.votes[i] === '○').length,\n    evenCounts: props.attendees.filter(attendee => attendee.votes[i] === '△').length,\n    negativeCounts: props.attendees.filter(attendee => attendee.votes[i] === '×').length,\n    }\n  });\n\n  return (\n    <TableContainer className=\"table\" id=\"attendance-table\">\n        <Table size=\"small\" aria-label=\"a dense table\">\n          <TableHead>\n            <TableRow>\n              <TableCell size=\"small\" >日程</TableCell>\n              <TableCell align=\"center\" size=\"small\" padding=\"none\">○</TableCell>\n              <TableCell align=\"center\" size=\"small\" padding=\"none\">△</TableCell>\n              <TableCell align=\"center\" size=\"small\" padding=\"none\">×</TableCell>\n              {props.attendees.map((atendee, i) => (\n                <TableCell key={i} align=\"center\">{atendee.name}</TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {attendanceCounts.map((count, i) => (\n            <TableRow key={i}>\n              <TableCell component=\"th\" scope=\"row\">\n                {props.columns[i]}\n              </TableCell>\n              <TableCell align=\"center\" size=\"small\" padding=\"none\">{count.positiveCounts}</TableCell>\n              <TableCell align=\"center\" size=\"small\" padding=\"none\">{count.evenCounts}</TableCell>\n              <TableCell align=\"center\" size=\"small\" padding=\"none\">{count.negativeCounts}</TableCell>\n              {props.attendees.map((atendee, index) => (\n                <TableCell key={index} align=\"center\">{atendee.votes[i]}</TableCell>\n              ))}\n            </TableRow>\n          ))}\n          <TableRow>\n            <TableCell component=\"th\" scope=\"row\">\n              コメント\n            </TableCell>\n            <TableCell align=\"center\"></TableCell>\n            <TableCell align=\"center\"></TableCell>\n            <TableCell align=\"center\"></TableCell>\n            {props.attendees.map((atendee, i) => (\n              <TableCell key={i} align=\"center\">{atendee.comment}</TableCell>\n            ))}\n          </TableRow>\n          </TableBody>\n        </Table>\n    </TableContainer>\n  );\n};\n\nexport default AttendanceTable;"]},"metadata":{},"sourceType":"module"}