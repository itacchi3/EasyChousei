{"ast":null,"code":"import _regeneratorRuntime from \"/usr/src/app/workplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/usr/src/app/workplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/usr/src/app/workplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/usr/src/app/workplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/usr/src/app/workplace/src/Event.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { firebaseApp } from \"./config/firebase\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField } from \"@material-ui/core\";\nimport { AttendanceTable, DateButtonGroup } from \"./parts\";\nimport { attendeesObjectToArray } from \"./DataConvert\";\nimport \"./Event.css\";\nconst firebaseDb = firebaseApp.database();\n\nconst Event = props => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        comment = _useState4[0],\n        setComment = _useState4[1]; // 2-1.ダミーデータを確認しよう\n  // コメントアウトを外してください\n\n\n  const _useState5 = useState({\n    name: \"\",\n    description: \"\",\n    dates: [],\n    attendees: []\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        event = _useState6[0],\n        setEvent = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        possibleDates = _useState8[0],\n        setPossibleDates = _useState8[1]; // 2-1.ダミーデータを確認しよう\n  // コメントアウトしてください\n  // const [event, setEvent] = useState({\n  //     name: \"オンライン交流会\",\n  //     description: \"楽しみましょう\",\n  //     dates: [ \"8/7(月) 20:00～\", \"8/8(火) 20:00～\", \"8/9(水) 21:00～\" ],\n  //     attendees: [\n  //       {\n  //         name: \"一郎\",\n  //         votes: [ \"○\", \"△\", \"×\" ],\n  //         comment: '9日はいけません'\n  //       },{\n  //         name: \"次郎\",\n  //         votes: [\"○\", \"○\", \"×\"],\n  //         comment: ''\n  //       }\n  //     ]\n  //   });\n  // const [possibleDates, setPossibleDates] = useState([\n  //     {\n  //         date: \"8/7(月) 20:00～\",\n  //         vote: '△'\n  //     },\n  //     {\n  //         date: \"8/8(火) 20:00～\",\n  //         vote: '△'\n  //     },\n  //     {\n  //         date: \"8/9(水) 21:00～\",\n  //         vote: '△'\n  //     },\n  // ]);\n\n\n  useEffect(() => {\n    // 2-2-1.イベントIDを取得しよう\n    const eventId = props.match.params.id;\n    console.log(eventId + \" 62\"); // 2-2-2.Realtime Databaseから取得するデータを特定しよう\n\n    firebaseDb.ref(\"events/\".concat(eventId)).on(\"value\", snapshot => {\n      // 2-2-3.Realtime Databaseからデータを取得しよう\n      const eventData = snapshot.val(); // 2-4.イベント名、説明文、候補日程を表示させよう\n\n      setEvent({\n        name: eventData.name,\n        description: eventData.description,\n        dates: eventData.dates,\n        attendees: eventData.attendees\n      }); // 2-5.候補日程を表示用に編集しよう\n\n      const newPossibleDate = eventData.dates.map(date => {\n        return {\n          date: date,\n          vote: \"△\"\n        };\n      });\n      setPossibleDates(newPossibleDate);\n    });\n  }, [setEvent, setPossibleDates, props.match.params.id]); // 出欠回答欄で選択された◯△×の情報はこの関数でstateに保存しています。\n\n  const _onSelectVote = (targetDate, selectedVote) => {\n    const newPossibleDates = possibleDates.map(possibleDate => {\n      return possibleDate.date === targetDate ? _objectSpread(_objectSpread({}, possibleDate), {}, {\n        vote: selectedVote\n      }) : possibleDate;\n    });\n    setPossibleDates(newPossibleDates);\n  }; // 名前入力欄、コメント入力欄、出欠選択欄のstateを初期状態に更新する関数\n\n\n  const initializeAttendances = () => {\n    setName(\"\");\n    setComment(\"\");\n    setPossibleDates(event.dates.map(date => {\n      return {\n        date: date,\n        vote: \"△\"\n      };\n    }));\n  }; // \"出欠を回答する\"ボタンを押すとこの関数が呼び出されます。\n\n\n  const registerAttendances = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var eventId, votes, attendeesData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            // 2-6.出欠情報登録機能を追加しよう\n            eventId = props.match.params.id;\n            console.log(eventId + \" 113\");\n            votes = possibleDates.map(possibleDate => possibleDate.vote);\n            attendeesData = {\n              name: name,\n              votes: votes,\n              comment: comment\n            }; // 出欠情報をRealTimeDatabaseに登録しましょう\n\n            firebaseDb.ref(\"events/\".concat(eventId, \"/attendees\")).push(attendeesData);\n            initializeAttendances();\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function registerAttendances() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    id: \"event\",\n    container: true,\n    item: true,\n    justify: \"space-between\",\n    alignItems: \"flex-start\",\n    xs: 9,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    direction: \"column\",\n    justify: \"flex-start\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: \"guide-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, event.name), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: \"guide-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, event.description)), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 11,\n    direction: \"column\",\n    justify: \"flex-start\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AttendanceTable, {\n    columns: event.dates,\n    attendees: event.attendees,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 11,\n    justify: \"space-between\",\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 5,\n    justify: \"flex-start\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: \"guide-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, \"\\u51FA\\u6B20\\u3092\\u5165\\u529B\\u3057\\u307E\\u3057\\u3087\\u3046\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    placeholder: \"\\u540D\\u524D\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    fullWidth: true,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    margin: \"normal\",\n    placeholder: \"\\u30B3\\u30E1\\u30F3\\u30C8\",\n    multiline: true,\n    rows: 7,\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    fullWidth: true,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 7,\n    spacing: 3,\n    justify: \"center\",\n    alignItems: \"flex-start\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, possibleDates.map(possibleDate => {\n    return /*#__PURE__*/React.createElement(DateButtonGroup, {\n      key: possibleDate.date,\n      date: possibleDate.date,\n      vote: possibleDate.vote,\n      onSelectVote: vote => _onSelectVote(possibleDate.date, vote),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    justify: \"flex-end\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => registerAttendances(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, \"\\u51FA\\u6B20\\u3092\\u56DE\\u7B54\\u3059\\u308B\")));\n};\n\nexport default withRouter(Event);","map":{"version":3,"sources":["/usr/src/app/workplace/src/Event.js"],"names":["React","useEffect","useState","withRouter","firebaseApp","Grid","Button","TextField","AttendanceTable","DateButtonGroup","attendeesObjectToArray","firebaseDb","database","Event","props","name","setName","comment","setComment","description","dates","attendees","event","setEvent","possibleDates","setPossibleDates","eventId","match","params","id","console","log","ref","on","snapshot","eventData","val","newPossibleDate","map","date","vote","onSelectVote","targetDate","selectedVote","newPossibleDates","possibleDate","initializeAttendances","registerAttendances","votes","attendeesData","push","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { firebaseApp } from \"./config/firebase\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField } from \"@material-ui/core\";\nimport { AttendanceTable, DateButtonGroup } from \"./parts\";\nimport { attendeesObjectToArray } from \"./DataConvert\";\n\nimport \"./Event.css\";\n\nconst firebaseDb = firebaseApp.database();\n\nconst Event = (props) => {\n  const [name, setName] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n  // 2-1.ダミーデータを確認しよう\n  // コメントアウトを外してください\n  const [event, setEvent] = useState({\n    name: \"\",\n    description: \"\",\n    dates: [],\n    attendees: [],\n  });\n  const [possibleDates, setPossibleDates] = useState([]);\n\n  // 2-1.ダミーデータを確認しよう\n  // コメントアウトしてください\n  // const [event, setEvent] = useState({\n  //     name: \"オンライン交流会\",\n  //     description: \"楽しみましょう\",\n  //     dates: [ \"8/7(月) 20:00～\", \"8/8(火) 20:00～\", \"8/9(水) 21:00～\" ],\n  //     attendees: [\n  //       {\n  //         name: \"一郎\",\n  //         votes: [ \"○\", \"△\", \"×\" ],\n  //         comment: '9日はいけません'\n  //       },{\n  //         name: \"次郎\",\n  //         votes: [\"○\", \"○\", \"×\"],\n  //         comment: ''\n  //       }\n  //     ]\n  //   });\n  // const [possibleDates, setPossibleDates] = useState([\n  //     {\n  //         date: \"8/7(月) 20:00～\",\n  //         vote: '△'\n  //     },\n  //     {\n  //         date: \"8/8(火) 20:00～\",\n  //         vote: '△'\n  //     },\n  //     {\n  //         date: \"8/9(水) 21:00～\",\n  //         vote: '△'\n  //     },\n  // ]);\n\n  useEffect(() => {\n    // 2-2-1.イベントIDを取得しよう\n    const eventId = props.match.params.id;\n    console.log(eventId + \" 62\");\n    // 2-2-2.Realtime Databaseから取得するデータを特定しよう\n    firebaseDb.ref(`events/${eventId}`).on(\"value\", (snapshot) => {\n      // 2-2-3.Realtime Databaseからデータを取得しよう\n      const eventData = snapshot.val();\n      // 2-4.イベント名、説明文、候補日程を表示させよう\n      setEvent({\n        name: eventData.name,\n        description: eventData.description,\n        dates: eventData.dates,\n        attendees: eventData.attendees,\n      });\n      // 2-5.候補日程を表示用に編集しよう\n      const newPossibleDate = eventData.dates.map((date) => {\n        return {\n          date: date,\n          vote: \"△\",\n        };\n      });\n      setPossibleDates(newPossibleDate);\n    });\n  }, [setEvent, setPossibleDates, props.match.params.id]);\n\n  // 出欠回答欄で選択された◯△×の情報はこの関数でstateに保存しています。\n  const onSelectVote = (targetDate, selectedVote) => {\n    const newPossibleDates = possibleDates.map((possibleDate) => {\n      return possibleDate.date === targetDate\n        ? { ...possibleDate, vote: selectedVote }\n        : possibleDate;\n    });\n    setPossibleDates(newPossibleDates);\n  };\n\n  // 名前入力欄、コメント入力欄、出欠選択欄のstateを初期状態に更新する関数\n  const initializeAttendances = () => {\n    setName(\"\");\n    setComment(\"\");\n    setPossibleDates(\n      event.dates.map((date) => {\n        return {\n          date: date,\n          vote: \"△\",\n        };\n      })\n    );\n  };\n\n  // \"出欠を回答する\"ボタンを押すとこの関数が呼び出されます。\n  const registerAttendances = async () => {\n    // 2-6.出欠情報登録機能を追加しよう\n    const eventId = props.match.params.id;\n    console.log(eventId + \" 113\");\n    const votes = possibleDates.map((possibleDate) => possibleDate.vote);\n    const attendeesData = {\n      name: name,\n      votes: votes,\n      comment: comment,\n    };\n    // 出欠情報をRealTimeDatabaseに登録しましょう\n    firebaseDb.ref(`events/${eventId}/attendees`).push(attendeesData);\n    initializeAttendances();\n  };\n\n  return (\n    <Grid\n      id=\"event\"\n      container\n      item\n      justify=\"space-between\"\n      alignItems=\"flex-start\"\n      xs={9}\n      spacing={4}\n    >\n      <Grid\n        container\n        item\n        xs={12}\n        direction=\"column\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item className=\"guide-title\">\n          {event.name}\n        </Grid>\n        <Grid item className=\"guide-message\">\n          {event.description}\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        item\n        xs={11}\n        direction=\"column\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        <AttendanceTable columns={event.dates} attendees={event.attendees} />\n      </Grid>\n      <Grid container item xs={11} justify=\"space-between\" spacing={4}>\n        <Grid container item xs={5} justify=\"flex-start\" direction=\"column\">\n          <Grid item className=\"guide-title\">\n            出欠を入力しましょう\n          </Grid>\n          <Grid item>\n            <TextField\n              placeholder=\"名前\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              fullWidth={true}\n              variant=\"outlined\"\n            />\n            <TextField\n              margin=\"normal\"\n              placeholder=\"コメント\"\n              multiline\n              rows={7}\n              value={comment}\n              onChange={(e) => setComment(e.target.value)}\n              fullWidth={true}\n              variant=\"outlined\"\n            />\n          </Grid>\n        </Grid>\n        <Grid\n          container\n          item\n          xs={7}\n          spacing={3}\n          justify=\"center\"\n          alignItems=\"flex-start\"\n          direction=\"column\"\n        >\n          {possibleDates.map((possibleDate) => {\n            return (\n              <DateButtonGroup\n                key={possibleDate.date}\n                date={possibleDate.date}\n                vote={possibleDate.vote}\n                onSelectVote={(vote) => onSelectVote(possibleDate.date, vote)}\n              />\n            );\n          })}\n        </Grid>\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\" alignItems=\"flex-start\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => registerAttendances()}\n        >\n          出欠を回答する\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withRouter(Event);\n"]},"metadata":{},"sourceType":"module"}